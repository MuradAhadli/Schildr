<?php
namespace app\controllers;
use app\components\Helpers;
use app\components\ModuleTextBehavior;
use app\components\User;
use app\components\UserVerifyBehavior;
use app\models\Clients;
use app\models\ConsultationForm;
use app\models\Doctor;
use app\models\Page;
use app\models\Partners;
use app\models\user\VerificationCodeForm;
use tubalmartin\CssMin\Tests\FineDiff\Render\Cli;
use yii;
use app\models\Department;
use yii\easyii\modules\productcategory\models\ProductCategory;
use yii\easyii\modules\project\models\Project;
use yii\easyii\modules\project\models\ProjectUploads;
use yii\easyii\modules\projectcategory\models\ProjectCategory;
use yii\helpers\ArrayHelper;
use yii\helpers\VarDumper;
use yii\web\Controller;
use yii\easyii\modules\consultation\models\Consultation;
use yii\helpers\Html;
use yii\easyii\modules\mailaddresses\models\Mailaddresses;
use app\models\Carousel;

class ProjectController extends Controller
{
    public $content_actions = ['index'];
    const RECIDENTAL_TYPE = 2;
    const COMMERCIAL_TYPE = 1;

    public function behaviors()
    {
        return [
            ModuleTextBehavior::className(),

            'user-verify' => [
                'class' => UserVerifyBehavior::className(),
                'actions' => ['index'],
            ]
        ];
    }


    public function beforeAction($action)
    {

        if (yii::$app->controller->action->id === 'append-ajax') {
            $this->enableCsrfValidation = false;
        }

        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }


    public function actionRecidental()
    {

        $projects = ProjectCategory::getAllProjectsByCategory(2, 6, 55);

        $this->view->title = 'Recidental Projects';//Yii translate **

        $clients = Clients::getAllClients();
        $partners = Partners::getPartners();
        $recidental_title = ProjectCategory::getAllProjectCategory();
        $recidental = ProjectCategory::getAllProjectsByCategory(self::RECIDENTAL_TYPE, 6);
        $recidentalForRightZone = ProjectCategory::getAllProjectsByCategory(self::RECIDENTAL_TYPE);
        $productCategories = ProductCategory::getProductCategory(0);
        $carousel = Carousel::getCarouselByPage(47);
        $productCategoriesForLink = ArrayHelper::map($productCategories, 'id', 'title');

        return $this->render('recidental', [
            'recidental' => $recidental,
            'clients' => $clients,
            'partners' => $partners,
            'productCategoriesForLink' => $productCategoriesForLink,
            'carousel' => $carousel,
            'productCategories' => $productCategories,
            'recidentalForRightZone' => $recidentalForRightZone,
            'recidental_title' => $recidental_title,
        ]);
    }

    public function actionCommercial()
    {
        $clients = Clients::getAllClients();
        $partners = Partners::getPartners();
        $commercial = ProjectCategory::getAllProjectsByCategory(self::COMMERCIAL_TYPE, 6);
        $commercialForRightZone = ProjectCategory::getAllProjectsByCategory(self::COMMERCIAL_TYPE);
        $productCategories = ProductCategory::getProductCategory(0);
        $carousel = Carousel::getCarouselByPage(48);
        $productCategoriesForLink = ArrayHelper::map($productCategories, 'id', 'title');


//        yii\helpers\VarDumper::dump(yii::$app->request->getHostName(),10,1);die();

        return $this->render('commercial', [
            'text' => $this->content,
            'commercial' => $commercial,
            'clients' => $clients,
            'partners' => $partners,
            'productCategoriesForLink' => $productCategoriesForLink,
            'carousel' => $carousel,
            'productCategories' => $productCategories,
            'commercialForRightZone' => $commercialForRightZone,
        ]);
    }
    public function actionIndex()
    {
        $this->view->title = 'Product Category';//Yii translate **
        $clients = Clients::getAllClients();
        $partners = Partners::getPartners();
        $carousel = Carousel::getCarouselByPage(49);
        $commercial = ProjectCategory::getCategoryById(1);
        $residential = ProjectCategory::getCategoryById(2);
        $productCategoriesForLink = ProductCategory::getProductCategory(0);
        $productCategory = ProductCategory::getProductCategory();
        $productCategoriesForRightZone = ArrayHelper::map(ProductCategory::getProductCategory(0), 'id', 'title');

        return $this->render('index', [
            'clients' => $clients,
            'partners' => $partners,
            'carousel' => $carousel,
            'commercial' => $commercial,
            'residential' => $residential,
            'page' => $page,
            'productCategory' => $productCategory,
            'productCategoriesForRightZone' => $productCategoriesForRightZone,
            'productCategoriesForLink' => $productCategoriesForLink,
        ]);
    }


    /**
     *Append Ajax when clicks load_more button in project.commercial && project/recidental pages ...
     */

    public function actionAppendAjax()
    {
        $limit = 6;
        /**If you want to change get data when click to load_more button then simply change this prop ($limit) value**/
        $state = true;
        /**This prop allows to get new data and additionally it report to ajax request about the load more button is display none or not display block**/
        $reason = [];
        $appendDiv = '';
        $itemSelector = '';
        if (yii::$app->request->isAjax) {
            $startId = yii::$app->request->post('id');
            $projectType = yii::$app->request->post('projectType');

            if ($projectType === 'recidental') {
                $projectType = self::RECIDENTAL_TYPE;
                $projectName = ProjectCategory::getCategoryName($projectType)['title'];
            } elseif ($projectType === 'commercial') {
                $projectType = self::COMMERCIAL_TYPE;
                $projectName = ProjectCategory::getCategoryName($projectType)['title'];
            }
            $projects = ProjectCategory::getAllProjectsByCategory($projectType, $limit, $startId);
            $projects = $projects[$projectType][$projectName];

            function getMinElement($Arr = [])
            {
                if (isset($Arr) && !empty($Arr)) {
                    $min = $Arr[0];
                    $count = count($Arr);
                    for ($i = 1; $i < $count; $i++) {
                        if ($min >= $Arr[$i]) {
                            $min = $Arr[$i];
                        }
                    }
                    return $min;
                }
            }

            $reasonArr = [];
            $k = 0;
            foreach ($projects as $project) {
                $reasonArr[$k] = $project['id'];
                $k++;
            }

            $lastRequestDataMinId = getMinElement($reasonArr);

            $dataRemainder = ProjectCategory::getAllProjectsByCategory($projectType, null, $lastRequestDataMinId);
            if (count($dataRemainder) == 0) {
                $state = false;
            }

            /**Create STR**/
            $iter = 1;
            $appendDiv .= '<div class="row contain-group">';
            foreach ($projects as $key => $val) {

                $countProjects = count($projects);

                if($iter == $countProjects){
                    $closer = '</div>';

                }else{

                    if ($iter % 2 == 0) {
                        $closer = '</div><div class="row contain-group">';
                    } else {
                        $closer = '';
                    }
                }



                $uploads = ProjectUploads::getUploadsByParent($val['id']);
                $i = 0;
                $itemSelector = '';
                $className = 'd-block';

                $appendDiv .= '<div class= ' . "'col-md-6 project_item'" . " data-id = " . $val['id'] . '>';
                $logo = '';


                if((isset($val['logo']) && !empty($val['logo']))){
                    $logo = '<img src="' . yii::getAlias('@web') . $val['logo'] . '" alt="">';
                };


                foreach ($uploads as $upload) {
                    if ($i > 0) {
                        $className = 'd-none';
                    }

                    $itemSelector .= '<a href=" ' . $upload['image'] . '" class="' . $className . '">';
                    $itemSelector .= '<img class="img-responsive" src="' . yii::getAlias('@web') . $upload['image'] . '"
                             alt="' . $val['title'] . '">';
                    $itemSelector .= '<div class="project_foot">';
                    $itemSelector .= '<div class= "project_foot_left">';
                    $itemSelector .= '<h1 class="text-left bg-white mb-0">' . $val["title"] . '</h1>';
                    $itemSelector .= '<p>' . $val['subtitle'] . '</p>';
                    $itemSelector .= '</div>';
                    $itemSelector .= '<div class= "project_foot_right">';
                    $itemSelector .= $logo;
                    $itemSelector .= '</div>';
                    $itemSelector .= '</div>';
                    $itemSelector .= '</a>';
                    $i++;
                }

                $appendDiv .= $itemSelector;
                $appendDiv .= '</div>';
                $appendDiv .= $closer;
                $iter++;
            }

            /**Print to console**/
            $reason['state'] = $state;
            $reason['append'] = $appendDiv;
            $reason['reasonMinId'] = $lastRequestDataMinId;
            $reason['countRemainder'] = count($dataRemainder);
            $reason['slickId'] = $reasonArr;

            $reason = json_encode($reason);
            echo $reason;
            die();
        }
    }
}